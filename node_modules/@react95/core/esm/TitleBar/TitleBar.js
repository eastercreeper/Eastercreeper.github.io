import React from 'react';
import styled, { th } from '@xstyled/styled-components';
import Button from '../Button';
import Frame from '../Frame/Frame';
var OptionsBox = styled.ul.withConfig({
  displayName: "TitleBar__OptionsBox",
  componentId: "sc-5cvtvn-0"
})(["\n  list-style: none;\n  padding: 0;\n  margin: 0;\n\n  display: flex;\n"]);
var Option = styled(Button).attrs({
  as: 'li'
}).withConfig({
  displayName: "TitleBar__Option",
  componentId: "sc-5cvtvn-1"
})(["\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  margin-left: 2;\n  padding: 0;\n\n  width: 17px;\n  height: 14px;\n\n  min-width: 0;\n  font-weight: 600;\n  font-size: 10;\n\n  &:active {\n    padding: 1 0 0 1;\n\n    outline: none;\n  }\n\n  &:first-child {\n    margin-right: 0;\n  }\n\n  &:focus {\n    box-shadow: inset 1px 1px 0px 1px ", ",\n      inset -1px -1px 0px 1px ", ";\n  }\n"], th('colors.borderLightest'), th('colors.borderDark'));
Option.displayName = 'Option';
var TitleBarBackground = styled(Frame).withConfig({
  displayName: "TitleBar__TitleBarBackground",
  componentId: "sc-5cvtvn-2"
})(["\n  height: 20;\n  margin-bottom: 2;\n\n  padding: 2;\n\n  display: flex;\n\n  box-shadow: none;\n\n  svg {\n    width: 16;\n    height: 16;\n    margin-right: 4;\n  }\n\n  background: ", ";\n"], function (_ref) {
  var active = _ref.active,
    theme = _ref.theme;
  return active ? theme.colors.headerBackground : theme.colors.headerNotActiveBackground;
});
var Title = styled.div.withConfig({
  displayName: "TitleBar__Title",
  componentId: "sc-5cvtvn-3"
})(["\n  flex-grow: 1;\n  line-height: 1.4em;\n  margin: 0;\n  font-size: 1em;\n  text-shadow: 0.5px 0px white, 1.5px 0px white;\n  color: transparent;\n  letter-spacing: 1px;\n  font-size: 1em;\n"]);
var TitleBarRenderer = function TitleBarRenderer(_ref2, ref) {
  var children = _ref2.children,
    _ref2$title = _ref2.title,
    title = _ref2$title === void 0 ? 'UNKNOWN.EXE' : _ref2$title,
    icon = _ref2.icon,
    _ref2$active = _ref2.active,
    active = _ref2$active === void 0 ? true : _ref2$active,
    className = _ref2.className;
  return /*#__PURE__*/React.createElement(TitleBarBackground, {
    active: active,
    color: active ? 'headerText' : 'headerNotActiveText',
    ref: ref,
    className: "default"
  }, icon && icon, /*#__PURE__*/React.createElement(Title, {
    className: className
  }, title), children);
};
var TitleBar = Object.assign( /*#__PURE__*/React.forwardRef(TitleBarRenderer), {
  Option: Option,
  OptionsBox: OptionsBox
});
export default TitleBar;