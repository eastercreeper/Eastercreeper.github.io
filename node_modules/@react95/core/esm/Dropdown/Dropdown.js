var _excluded = ["options"];
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
import React, { forwardRef } from 'react';
import styled, { th } from '@xstyled/styled-components';
import caret from './imgs/downcaret.png';
var Wrapper = styled.div.withConfig({
  displayName: "Dropdown__Wrapper",
  componentId: "sc-1rfrh0u-0"
})(["\n  position: relative;\n  width: 200px;\n  height: 20px;\n\n  &:after {\n    display: flex;\n    justify-content: center;\n    width: 17px;\n    height: 16px;\n    font-size: 14px;\n    line-height: 1.1;\n    content: '';\n    pointer-events: none;\n    position: absolute;\n    right: 1px;\n    top: 2px;\n\n    background-color: material;\n    box-shadow: inset 0.5px 0.7px 0px 0.7px ", ",\n      inset -1px 0px 0 1px ", ",\n      inset 1.5px 1.5px 0px 1.5px ", ";\n\n    border-right: 1;\n    border-bottom: 1;\n\n    background-image: url('", "');\n    background-position: 60% 60%;\n    background-repeat: no-repeat;\n  }\n"], th('colors.material'), th('colors.borderDark'), th('colors.borderLightest'), caret);
var Select = styled.select.withConfig({
  displayName: "Dropdown__Select",
  componentId: "sc-1rfrh0u-1"
})(["\n  position: relative;\n  outline: none;\n  border: none;\n  border-radius: 0;\n  width: 100%;\n  height: 20px;\n\n  padding: 3;\n\n  color: materialText;\n  background-color: inputBackground;\n\n  border-left: 1;\n  border-left-color: borderDark;\n  border-top: 1;\n  border-top-color: borderDark;\n\n  box-shadow: inset -1px -1px 0 0 ", ",\n    inset 1px 1px 0 0 ", ",\n    0.5px 0.5px 0 0.5px ", ";\n\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  appearance: none;\n"], th('colors.material'), th('colors.borderDarkest'), th('colors.borderLightest'));
var Dropdown = /*#__PURE__*/forwardRef(function (_ref, ref) {
  var options = _ref.options,
    rest = _objectWithoutProperties(_ref, _excluded);
  return /*#__PURE__*/React.createElement(Wrapper, null, /*#__PURE__*/React.createElement(Select, _extends({}, rest, {
    ref: ref
  }), options && options.map(function (option) {
    return /*#__PURE__*/React.createElement("option", {
      key: option,
      value: option
    }, option);
  })));
});
Dropdown.defaultProps = {
  options: ['', 'C:\\Documents and Settings', 'C:\\Documents and Settings\\Documents', 'iexplorer.exe']
};
export default Dropdown;