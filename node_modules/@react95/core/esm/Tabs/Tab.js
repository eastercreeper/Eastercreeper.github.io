var _excluded = ["activeTab", "title"];
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
import React, { forwardRef } from 'react';
import styled, { css, th } from '@xstyled/styled-components';
var NavItem = styled.li.withConfig({
  displayName: "Tab__NavItem",
  componentId: "sc-vz441a-0"
})(["\n  list-style: none;\n  padding: 3 6;\n  background-color: material;\n  box-shadow: inset 0 1px 0 0 ", ",\n    -2px 1px 0 -1px ", ",\n    -3px 1px 0 -1px ", ",\n    -2px 0 0 -1px ", ",\n    2px 1px 0 -1px ", ",\n    2px 0 0 -1px ", ",\n    3px 1px 0 -1px ", ";\n  margin-right: 2;\n  margin-left: 2;\n\n  &:first-child {\n    margin-left: 4;\n  }\n\n  ", "\n"], th('colors.borderLightest'), th('colors.material'), th('colors.borderLightest'), th('colors.borderLightest'), th('colors.borderDark'), th('colors.borderDarkest'), th('colors.borderDarkest'), function (_ref) {
  var active = _ref.active;
  return active && css(["\n      margin-top: -2;\n      margin-left: -2;\n      margin-bottom: 1;\n\n      &:first-child {\n        margin-left: 2;\n      }\n\n      box-shadow: inset 0 1px 0 0 ", ",\n        -2px 1px 0 -1px ", ",\n        -0.5px 3px 0 0.5px ", ",\n        -2px 2px 0 0 ", ",\n        -2px 0 0 -1px ", ",\n        1px 2px 0 0 ", ",\n        2px 0 0 -1px ", ",\n        2px 2px 0 0 ", ";\n\n      & + li {\n        margin-left: 0;\n        box-shadow: inset 0 1px 0 0 ", ",\n          2px 1px 0 -1px ", ",\n          2px 0 0 -1px ", ",\n          3px 1px 0 -1px ", ";\n      }\n    "], th('colors.borderLightest'), th('colors.material'), th('colors.material'), th('colors.borderLightest'), th('colors.borderLightest'), th('colors.borderDark'), th('colors.borderDarkest'), th('colors.borderDarkest'), th('colors.borderLightest'), th('colors.borderDark'), th('colors.borderDarkest'), th('colors.borderDarkest'));
});
var Tab = /*#__PURE__*/forwardRef(function (_ref2, ref) {
  var activeTab = _ref2.activeTab,
    title = _ref2.title,
    rest = _objectWithoutProperties(_ref2, _excluded);
  return /*#__PURE__*/React.createElement(NavItem, _extends({}, rest, {
    active: activeTab === title,
    ref: ref
  }), title);
});
export default Tab;