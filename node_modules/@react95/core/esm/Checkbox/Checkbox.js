var _excluded = ["children", "style", "checked", "label", "disabled"];
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
import React, { forwardRef } from 'react';
import styled, { css, th } from '@xstyled/styled-components';
import check from './imgs/check.svg';
import checkDisabled from './imgs/check-disabled.svg';
var Icon = styled.span.withConfig({
  displayName: "Checkbox__Icon",
  componentId: "sc-18k8gti-0"
})(["\n  width: 12px;\n  height: 12px;\n\n  content: '';\n  display: inline-block;\n\n  position: absolute;\n  left: 0;\n\n  border-left: 1;\n  border-left-color: borderDark;\n  border-top: 1;\n  border-top-color: borderDark;\n\n  box-shadow: inset -1px -1px 0 0 ", ",\n    inset 1px 1px 0 0 ", ",\n    0.5px 0.5px 0 0.5px ", ";\n\n  background-color: inputBackground;\n\n  background-repeat: no-repeat;\n  background-position: center center;\n  background-size: 7px 7px;\n"], th('colors.material'), th('colors.borderDarkest'), th('colors.borderLightest'));
var Text = styled.span.withConfig({
  displayName: "Checkbox__Text",
  componentId: "sc-18k8gti-1"
})(["\n  padding: 1;\n  user-select: none;\n"]);
var Field = styled.input.attrs({
  type: 'checkbox'
}).withConfig({
  displayName: "Checkbox__Field",
  componentId: "sc-18k8gti-2"
})(["\n  width: 12px;\n  height: 12px;\n\n  margin: 0;\n\n  position: absolute;\n  top: 0;\n  left: 0;\n\n  opacity: 0;\n\n  &:focus ~ ", ", &:active ~ ", " {\n    border-width: 1;\n    border-style: dotted;\n    padding: 0;\n  }\n\n  &:checked + ", " {\n    background-image: url('", "');\n  }\n\n  &:checked &:disabled + ", " {\n    background-image: url('", "');\n    background-size: 7px 7px, 1.9px 1.9px;\n  }\n\n  &:disabled + ", " {\n    background-color: inputBackgroundDisabled;\n  }\n"], Text, Text, Icon, check, Icon, checkDisabled, Icon);
Field.displayName = 'Field';
var Label = styled.label.withConfig({
  displayName: "Checkbox__Label",
  componentId: "sc-18k8gti-3"
})(["\n  display: inline-block;\n  height: 15px;\n\n  line-height: 1.5;\n\n  position: relative;\n\n  margin: 4 0;\n  padding-left: 20;\n\n  ", "\n"], function (_ref) {
  var disabled = _ref.disabled;
  return disabled && css(["\n      color: borderDark;\n      text-shadow: 0.5px 0.5px ", ";\n    "], th('colors.borderLight'));
});
var Checkbox = /*#__PURE__*/forwardRef(function (_ref2, ref) {
  var children = _ref2.children,
    style = _ref2.style,
    checked = _ref2.checked,
    label = _ref2.label,
    _ref2$disabled = _ref2.disabled,
    disabled = _ref2$disabled === void 0 ? false : _ref2$disabled,
    rest = _objectWithoutProperties(_ref2, _excluded);
  return /*#__PURE__*/React.createElement(Label, {
    style: style,
    disabled: disabled
  }, /*#__PURE__*/React.createElement(Field, _extends({
    checked: checked,
    disabled: disabled
  }, rest, {
    ref: ref
  })), /*#__PURE__*/React.createElement(Icon, null), /*#__PURE__*/React.createElement(Text, null, children || label));
});
export default Checkbox;