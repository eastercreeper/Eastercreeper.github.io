var _excluded = ["width", "percent"];
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
import React, { forwardRef } from 'react';
import styled, { css, th } from '@xstyled/styled-components';
var Wrapper = styled.div.withConfig({
  displayName: "ProgressBar__Wrapper",
  componentId: "sc-1xpcki1-0"
})(["\n  width: ", "px;\n  height: 20px;\n\n  position: relative;\n\n  text-align: center;\n"], function (_ref) {
  var width = _ref.width;
  return width;
});
var WhiteBar = styled.div.withConfig({
  displayName: "ProgressBar__WhiteBar",
  componentId: "sc-1xpcki1-1"
})(["\n  width: ", "px;\n  height: 20px;\n  line-height: 20px;\n\n  border-left: 1;\n  border-left-color: borderDark;\n\n  border-top: 1;\n  border-top-color: borderDark;\n\n  background-color: inputBackground;\n  color: materialText;\n\n  ", "\n"], function (_ref2) {
  var width = _ref2.width;
  return width;
}, css(["\n    box-shadow: inset -1px -1px 0 0 ", ",\n      inset 1px 1px 0 0 ", ",\n      0.5px 0.5px 0 0.5px ", ";\n  "], th('colors.material'), th('colors.borderDarkest'), th('colors.borderLightest')));
var Container = styled.div.withConfig({
  displayName: "ProgressBar__Container",
  componentId: "sc-1xpcki1-2"
})(["\n  width: ", "%;\n\n  position: absolute;\n  top: 0;\n  left: 0;\n\n  overflow: hidden;\n"], function (_ref3) {
  var percent = _ref3.percent;
  return percent;
});
var Progress = styled.div.withConfig({
  displayName: "ProgressBar__Progress",
  componentId: "sc-1xpcki1-3"
})(["\n  width: ", "px;\n  height: 17px;\n  line-height: 18px;\n\n  margin-left: 2;\n  margin-top: 2;\n\n  background-color: progress;\n  color: ", ";\n"], function (_ref4) {
  var width = _ref4.width;
  return width;
}, th('colors.materialTextInvert'));
var ProgressBar = /*#__PURE__*/forwardRef(function (_ref5, ref) {
  var width = _ref5.width,
    percent = _ref5.percent,
    rest = _objectWithoutProperties(_ref5, _excluded);
  return /*#__PURE__*/React.createElement(Wrapper, _extends({
    width: width
  }, rest, {
    ref: ref
  }), /*#__PURE__*/React.createElement(WhiteBar, {
    width: width
  }, "".concat(percent, "%")), /*#__PURE__*/React.createElement(Container, {
    percent: percent
  }, /*#__PURE__*/React.createElement(Progress, {
    width: width
  }, "".concat(percent, "%"))));
});
ProgressBar.defaultProps = {
  width: 150,
  percent: 0
};
export default ProgressBar;