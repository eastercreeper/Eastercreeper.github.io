var _excluded = ["children", "id", "icon", "label", "onClick"];
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
import * as React from 'react';
import styled from '@xstyled/styled-components';
import treeMidLines from './imgs/tree-mid.png';
import treeLastLines from './imgs/tree-last.png';
import treeNodeChildrenLine from './imgs/tree-node-children.png';
import { Bat, BatExec, FileFont2, FilePen, FileSettings, FileText, FileTextSettings, Folder, FolderOpen, MediaCd } from '@react95/icons';
export var icons = {
  FILE_MEDIA: MediaCd,
  FILE_TEXT: FileText,
  FILE_UNKNOWN: Bat,
  FILE_FONT: FileFont2,
  FILE_PEN: FilePen,
  FILE_SETTINGS: FileSettings,
  FILE_TEXT_SETTINGS: FileTextSettings,
  FILE_EXECUTABLE: BatExec
};
var NodeItem = styled.div.withConfig({
  displayName: "Node__NodeItem",
  componentId: "sc-284w29-0"
})(["\n  list-style-type: none;\n  background-repeat: no-repeat;\n  background-image: url(", ");\n\n  &:last-child {\n    background-image: url(", ");\n  }\n"], treeMidLines, function (_ref) {
  var isOpen = _ref.isOpen;
  return isOpen ? treeMidLines : treeLastLines;
});
var NodeInfo = styled.div.withConfig({
  displayName: "Node__NodeInfo",
  componentId: "sc-284w29-1"
})(["\n  display: flex;\n  align-items: center;\n  user-select: none;\n  -webkit-user-select: none;\n  -khtml-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n"]);
var FolderStatus = styled.div.withConfig({
  displayName: "Node__FolderStatus",
  componentId: "sc-284w29-2"
})(["\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 10px;\n  height: 10px;\n  border: 1;\n  border-color: borderDarkest;\n  background-color: inputBackground;\n  font-size: 11px;\n"]);
var IconContainer = styled.div.withConfig({
  displayName: "Node__IconContainer",
  componentId: "sc-284w29-3"
})(["\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 20px;\n  height: 20px;\n  margin-right: 6;\n  margin-left: ", "px;\n\n  > svg {\n    width: 14px;\n    height: 14px;\n  }\n"], function (_ref2) {
  var hasChildren = _ref2.hasChildren;
  return hasChildren ? 8 : 18;
});
var NodeChildren = styled.ul.withConfig({
  displayName: "Node__NodeChildren",
  componentId: "sc-284w29-4"
})(["\n  padding: 0 0 0 22;\n  background-image: url(", ");\n  background-repeat: repeat-y;\n"], treeNodeChildrenLine);
var Label = styled.span.withConfig({
  displayName: "Node__Label",
  componentId: "sc-284w29-5"
})(["\n  outline: none;\n  padding: 1;\n\n  :focus {\n    border-width: 1;\n    border-style: dotted;\n    padding: 0;\n  }\n"]);
var NodeIcon = function NodeIcon(_ref3) {
  var hasChildren = _ref3.hasChildren,
    isOpen = _ref3.isOpen;
  if (!hasChildren) {
    return /*#__PURE__*/React.createElement(Bat, {
      variant: "16x16_4",
      "data-testid": "react95-default-icon-bat"
    });
  }
  if (isOpen) {
    return /*#__PURE__*/React.createElement(FolderOpen, {
      variant: "16x16_4",
      "data-testid": "react95-default-icon-folder-open"
    });
  }
  return /*#__PURE__*/React.createElement(Folder, {
    variant: "16x16_4",
    "data-testid": "react95-default-icon-folder"
  });
};
var Node = function Node(_ref4) {
  var _ref4$children = _ref4.children,
    children = _ref4$children === void 0 ? [] : _ref4$children,
    id = _ref4.id,
    icon = _ref4.icon,
    label = _ref4.label,
    _ref4$onClick = _ref4.onClick,
    onClick = _ref4$onClick === void 0 ? function () {} : _ref4$onClick,
    rest = _objectWithoutProperties(_ref4, _excluded);
  var _React$useState = React.useState(false),
    _React$useState2 = _slicedToArray(_React$useState, 2),
    isOpen = _React$useState2[0],
    setIsOpen = _React$useState2[1];
  var hasChildren = children.length > 0;
  var onClickHandler = function onClickHandler(event) {
    onClick(event, {
      id: id,
      icon: icon,
      label: label,
      children: children
    });
  };
  var onKeyDownHandler = function onKeyDownHandler(event) {
    if (event.key === ' ') {
      setIsOpen(!isOpen);
      onClickHandler(event);
    }
  };
  return /*#__PURE__*/React.createElement(NodeItem, _extends({
    isOpen: isOpen
  }, rest), /*#__PURE__*/React.createElement(NodeInfo, null, hasChildren && /*#__PURE__*/React.createElement(FolderStatus, {
    onClick: function onClick() {
      return setIsOpen(!isOpen);
    }
  }, isOpen ? '-' : '+'), /*#__PURE__*/React.createElement(IconContainer, {
    hasChildren: hasChildren
  }, icon || /*#__PURE__*/React.createElement(NodeIcon, {
    hasChildren: hasChildren,
    isOpen: isOpen
  })), /*#__PURE__*/React.createElement(Label, {
    tabIndex: 0,
    onDoubleClick: function onDoubleClick() {
      return setIsOpen(!isOpen);
    },
    onClick: onClickHandler,
    onKeyDown: onKeyDownHandler
  }, label)), hasChildren && isOpen && /*#__PURE__*/React.createElement(NodeChildren, null, children === null || children === void 0 ? void 0 : children.map(function (dataNode) {
    return /*#__PURE__*/React.createElement(Node, _extends({
      key: dataNode.id
    }, dataNode));
  })));
};
export default Node;