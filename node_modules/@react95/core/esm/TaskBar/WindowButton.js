var _excluded = ["children", "small", "icon", "active"];
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
import React from 'react';
import styled, { css, th } from '@xstyled/styled-components';
import { Bat } from '@react95/icons';
import Frame from '../Frame/Frame';
var Button = styled(Frame).withConfig({
  displayName: "WindowButton__Button",
  componentId: "sc-1vv5l1a-0"
})(["\n  display: inline-flex;\n  justify-content: flex-start;\n  align-items: center;\n  padding: 2 3;\n  margin-right: 2;\n  max-width: 150px;\n  border: none;\n  outline: none;\n\n  ", "\n\n  ", "\n"], function (_ref) {
  var small = _ref.small;
  return !small ? "\n    width: 100%;\n  " : '';
}, function (_ref2) {
  var active = _ref2.active,
    small = _ref2.small;
  return active && small ? css(["\n          outline: ", "px dotted ", ";\n          outline-offset: -", "px;\n          padding-top: 4;\n          padding-right: 2;\n          padding-bottom: 0;\n          padding-left: 4;\n        "], th('space.1'), th('colors.borderDarkest'), th('space.4')) : '';
});
var IconWrapper = styled.div.withConfig({
  displayName: "WindowButton__IconWrapper",
  componentId: "sc-1vv5l1a-1"
})(["\n  svg {\n    margin-top: 4;\n    margin-right: 4;\n    min-width: 20;\n    width: 20;\n    height: 20;\n    shape-rendering: auto;\n  }\n"]);
var WindowButton = function WindowButton(_ref3) {
  var _ref3$children = _ref3.children,
    children = _ref3$children === void 0 ? '' : _ref3$children,
    small = _ref3.small,
    icon = _ref3.icon,
    active = _ref3.active,
    props = _objectWithoutProperties(_ref3, _excluded);
  return /*#__PURE__*/React.createElement(Button, _extends({
    active: active,
    small: small
  }, active ? {
    boxShadow: 'in',
    bg: small ? undefined : 'borderLighter'
  } : {
    boxShadow: 'out'
  }, props, {
    as: "button"
  }), /*#__PURE__*/React.createElement(IconWrapper, null, icon), children);
};
WindowButton.defaultProps = {
  small: false,
  icon: /*#__PURE__*/React.createElement(Bat, {
    variant: "32x32_4"
  }),
  active: false
};
export default WindowButton;