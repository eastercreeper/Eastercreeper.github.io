var _excluded = ["children", "disabled"];
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
import React, { forwardRef } from 'react';
import styled, { css, th } from '@xstyled/styled-components';
import { radioChecked, radioCheckedDisabled, radioUnchecked, radioUncheckedDisabled } from './radioButtonStates';
var Icon = styled.span.withConfig({
  displayName: "RadioButton__Icon",
  componentId: "sc-1nrg9a4-0"
})(["\n  width: 12px;\n  height: 12px;\n\n  content: '';\n  display: inline-block;\n\n  position: absolute;\n  left: 0;\n  top: 0;\n\n  background-image: url(", ");\n"], radioUnchecked);
var Text = styled.span.withConfig({
  displayName: "RadioButton__Text",
  componentId: "sc-1nrg9a4-1"
})(["\n  padding: 1;\n  user-select: none;\n\n  position: absolute;\n  top: 0;\n  left: 18px;\n"]);
var Field = styled.input.attrs({
  type: 'radio'
}).withConfig({
  displayName: "RadioButton__Field",
  componentId: "sc-1nrg9a4-2"
})(["\n  margin: 0;\n  opacity: 0;\n\n  &:focus ~ ", ", &:active + ", " {\n    border-width: 1;\n    border-style: dotted;\n    padding: 0;\n  }\n\n  &:checked + ", " {\n    background-image: url(", ");\n  }\n\n  &:disabled + ", " {\n    background-image: url(", ");\n  }\n\n  &:checked:disabled + ", " {\n    background-image: url(", ");\n  }\n"], Text, Text, Icon, radioChecked, Icon, radioUncheckedDisabled, Icon, radioCheckedDisabled);
var Label = styled.label.withConfig({
  displayName: "RadioButton__Label",
  componentId: "sc-1nrg9a4-3"
})(["\n  position: relative;\n  margin-bottom: 10;\n  display: block;\n\n  ", "\n"], function (_ref) {
  var disabled = _ref.disabled;
  return disabled && css(["\n      color: materialTextDisabled;\n      text-shadow: 0.5px 0.5px ", ";\n    "], th('colors.materialTextDisabledShadow'));
});
var RadioButton = /*#__PURE__*/forwardRef(function (_ref2, ref) {
  var children = _ref2.children,
    disabled = _ref2.disabled,
    props = _objectWithoutProperties(_ref2, _excluded);
  return /*#__PURE__*/React.createElement(Label, {
    disabled: disabled
  }, /*#__PURE__*/React.createElement(Field, _extends({
    disabled: disabled
  }, props, {
    ref: ref
  })), /*#__PURE__*/React.createElement(Icon, null), /*#__PURE__*/React.createElement(Text, null, children));
});
RadioButton.defaultProps = {
  children: '',
  disabled: false
};
export default RadioButton;